 @model MHDecora.Site.Domain.Entities.Detalhe

@{
    // string numero = "5519983603822"; // Substitua com o número desejado, incluindo o código do país
    // string texto = "Título: " + Model.ListaMontagem[0].Titulo; // Texto pré-definido a ser incluído na mensagem
    // string url = "https://wa.me/" + numero + "?text=" + System.Uri.EscapeDataString(texto);
}



<style>
    /* Estilos adicionais para ajustar o layout do carrossel */


    .carrossel__titulo {
        color: var(--laranja-secundario);
        background-color: var(--branco-secundario);
        text-align: center;
        text-transform: uppercase;
        font-size: 18px;
        font-weight: 700;
        padding: 1em 0 0.5em 0;
    }

    .swiper-slide img {
        width: 100%;
    }

    .swiper-button-prev, .swiper-button-next {
        display: none;
    }

    .swiper-pagination {
        position: initial;
        margin: .5em 0;
    }

    .swiper-pagination {
        text-align: center; /* Centraliza as bolinhas de navegação */
        margin-top: 10px; /* Espaçamento superior opcional */
    }

        .swiper-pagination .swiper-pagination-bullet {
            width: 8px; /* Tamanho das bolinhas */
            height: 8px;
            background-color: #007bff; /* Cor das bolinhas */
            opacity: 0.5; /* Opacidade das bolinhas */
        }

        .swiper-pagination .swiper-pagination-bullet-active {
            opacity: 1; /* Opacidade da bolinha ativa */
        }

    /* Estilo para o container dos cards */
    .card-container-gal {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        padding: 20px;
    }

    /* Estilo para cada card */
    .card-gal {
        border-radius: 15px;
        box-shadow: -1px 1px 5px 3px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 270px; /* Largura do card */
        padding: 15px;
        margin-left: 10px;
        margin-top: 5px;
    }

        /* Estilo para a imagem dentro do card */
        .card-gal img {
            width: 100%;
            box-sizing: border-box;
        }

    /* Estilo para o conteúdo de texto */
    .card-content-gal {
        text-align: left;
        padding-top: 10px;
    }

    /* Estilo para o título */
    .card-title-gal {
        font-style: normal; /* Estilo da fonte (normal, italic, etc.) */
        font-display: swap;
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 5px;
        margin-top: 10px;
    }

    /* Estilo para a descrição */
    .card-description-gal {
        font-size: 16px;
        color: #666;
    }
</style>
<div class="container">
    @{
        if (Model != null)
        {
            <div class="detail">
                <h1 class="name mb-3" style="text-align: center">@Model.ListaMontagem[0].Titulo</h1>

                <div class="image">
                    <!-- Imagem principal -->
                    <img src="@Model.ListaMontagem[0].CaminhoImagem" id="image-principal" />

                    <!-- Container para imagens menores -->
                    <div class="image-grid">
                        <!-- Imagens menores -->
                        @if (Model.ListaMontagem[0].CaminhoImagem2 != null)
                        {
                            <img src="@Model.ListaMontagem[0].CaminhoImagem2" class="imagem-menor" />
                        }
                        @if (Model.ListaMontagem[0].CaminhoImagem3 != null)
                        {
                            <img src="@Model.ListaMontagem[0].CaminhoImagem3" class="imagem-menor" />
                        }
                        @if (Model.ListaMontagem[0].CaminhoImagem4 != null)
                        {
                            <img src="@Model.ListaMontagem[0].CaminhoImagem4" class="imagem-menor" />
                        }
                    </div>
                </div>


                
                <div class="content mb-3">
                    <h1 class="name">Descrição do produto</h1>

                    <div class="description">
                        @Html.Raw(@Model.ListaMontagem[0].Texto)
                    </div>
                    <div class="buttons">
                        <a href="@Model.ListaMontagem[0].LinkBotao" target="_blank">Solicitar orçamento</a>
                    </div>
                </div>
            </div>
        }
    }

    @if(Model.ListaMontagem.Count() > 0)
    {
        <div class="product-list">
            <div class="title negrito"><strong>Veja também</strong></div>

            <div class="listProduct">


                <div class="filterable-cards-detalhe">
                    @for (var x = 1; x < Model.ListaMontagem.Count(); x++)
                    {
                        var montagem = Model.ListaMontagem[x];
                        if (montagem.Id != Model.ListaMontagem[0].Id)
                        {
                            <div class="card" data-name="" style="display: block;">
                                <img src="@Model.ListaMontagem[x].CaminhoImagem" alt="recent">
                                <div class="card-body">
                                    <h6 class="card-title-gal">@Model.ListaMontagem[x].Titulo</h6>
                                    <p class="card-title-gal negrito">@Model.ListaMontagem[x].TextoImagem</p>
                                    <a href="/Home/Detalhes?montagemId=@Model.ListaMontagem[x].Id" class="btn">Saiba mais</a>
                                </div>
                            </div>
                        }
                    }
                </div>

            </div>
        </div>
    }


    @* <a href="../index.html" class="btn-back">
        <i class="fa-solid fa-arrow-left"></i>
    </a> *@
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script type="text/javascript">

    // Executa o código após o carregamento do documento
    $(document).ready(function () {
        // Seleciona todas as imagens menores com a classe 'imagem-menor'
        $('.imagem-menor').click(function () {
            // Salva o caminho da imagem principal atual
            var caminhoImagemPrincipal = $('#image-principal').attr('src');

            // Obtém o caminho da imagem clicada (menor)
            var caminhoNovaImagemPrincipal = $(this).attr('src');

            // Altera a imagem principal para a imagem clicada (menor)
            $('#image-principal').attr('src', caminhoNovaImagemPrincipal);

            // Altera a imagem clicada (menor) para a imagem principal anterior
            $(this).attr('src', caminhoImagemPrincipal);
        });
    });
        // let products = null;
        // // get data from file json
        // fetch("../data/products.json")
        //     .then((response) => response.json())
        //     .then((data) => {
        //         products = data;
        //         showDetail();
        //     });

        // function showDetail() {
        //     // remove default data from HTML
        //     let detail = document.querySelector(".detail");
        //     let listProduct = document.querySelector(".listProduct");
        //     let productId = new URLSearchParams(window.location.search).get("id");
        //     let thisProduct = products.filter((value) => value.id == productId)[0];
        //     // if there is no product with id = productId => return to home page
        //     if (!thisProduct) {
        //         window.location.href = "/";
        //     }

        //     detail.querySelector(".image img").src = thisProduct.image;
        //     detail.querySelector(".name").innerText = thisProduct.name;
        //     detail.querySelector(".description").innerText =
        //         "" + thisProduct.description;

        //     products
        //         .filter((value) => value.id != productId)
        //         .slice(0, 4) // Limit to the first 4 products
        //         .forEach((product) => {
        //             let newProduct = document.createElement("a");
        //             newProduct.href = "detail.html?id=" + product.id;
        //             newProduct.classList.add("item");
        //             newProduct.innerHTML = `<img src="${product.image}" alt="">
        //       <h2>${product.name}</h2><a href=${newProduct.href}>Saiba mais</a>
        //       `;
        //             listProduct.appendChild(newProduct);
        //         });
        // }

            // document.addEventListener("DOMContentLoaded", function () {
            // const principalImage = document.getElementById("image-principal");
            // const gridImages = document.querySelectorAll(".image-grid img");

            //     gridImages.forEach(function (img) {
            //         img.addEventListener("click", function () {
            //            // if (!this.src.includes("blank")) {   // Verifica se é o qruivo em branco
            //                 principalImage.src = this.src;
            //            // }
            //         });
            //     });


            // });
        
    </script>
